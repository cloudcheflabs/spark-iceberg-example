<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>co.cloudcheflabs.example</groupId>
	<artifactId>spark-iceberg-example</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>Spark Iceberg Example</name>
	<description>Spark Iceberg Example</description>
	<url>https://github.com/cloudcheflabs/spark-iceberg-example</url>

	<inceptionYear>2012</inceptionYear>

	<licenses>
		<license>
			<name>Apache License 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:https://github.com/cloudcheflabs/spark-iceberg-example.git</connection>
		<url>https://github.com/cloudcheflabs/spark-iceberg-example</url>
		<tag>HEAD</tag>
	</scm>

	<developers>
		<developer>
			<id>mykidong</id>
			<name>Kidong Lee</name>
			<email>mykidong@cloudchef-labs.com</email>
		</developer>
	</developers>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- logback -->
		<logback.version>1.2.6</logback.version>

		<!-- slf4j -->
		<slf4j.version>1.7.30</slf4j.version>

		<!-- commons io -->
		<commons-io.version>2.7</commons-io.version>

		<!-- json io -->
		<json-io.version>4.9.0</json-io.version>

		<!-- snake yaml -->
		<snake-yaml.version>1.26</snake-yaml.version>

		<!-- joda time -->
		<joda-time.version>2.10.6</joda-time.version>

		<!-- commons codec -->
		<commons-codec.version>1.15</commons-codec.version>

		<!-- testing -->
		<junit.version>4.12</junit.version>

		<!-- spring -->
		<spring.version>5.3.34</spring.version>

		<!-- scala -->
		<scala.version>2.12.19</scala.version>
		<scala.binary.version>2.12</scala.binary.version>

		<!-- spark -->
		<spark.version>3.4.3</spark.version>

		<!-- hadoop version -->
		<hadoop.version>3.3.4</hadoop.version>

		<!-- iceberg -->
		<iceberg.version>1.4.2</iceberg.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.cedarsoftware</groupId>
			<artifactId>json-io</artifactId>
			<version>${json-io.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda-time.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-reflect</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scalap</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang.modules</groupId>
			<artifactId>scala-collection-compat_2.12</artifactId>
			<version>2.12.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.binary.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-avro_${scala.binary.version}</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_${scala.binary.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-hive_${scala.binary.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-aws</artifactId>
			<version>${hadoop.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>${hadoop.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>${hadoop.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.iceberg</groupId>
			<artifactId>iceberg-spark-runtime-3.4_${scala.binary.version}</artifactId>
			<version>${iceberg.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.iceberg</groupId>
			<artifactId>iceberg-aws-bundle</artifactId>
			<version>${iceberg.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>17</source>
					<target>17</target>
					<compilerVersion>17</compilerVersion>
					<encoding>utf-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.5.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.4.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M7</version>
				<configuration>
					<argLine>--add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.base/sun.security.action=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/java.lang.invoke=ALL-UNNAMED</argLine>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>3.0.0-M7</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<artifactSet>
						<excludes>
							<exclude>junit:junit</exclude>
							<exclude>jmock:*</exclude>
							<exclude>*:xml-apis</exclude>
							<exclude>log4j:log4j:jar:</exclude>
						</excludes>
					</artifactSet>
					<createDependencyReducedPom>false</createDependencyReducedPom>
					<shadedArtifactAttached>true</shadedArtifactAttached>
					<shadedClassifierName>spark-job</shadedClassifierName>
					<relocations>
						<relocation>
							<pattern>com.google</pattern>
							<shadedPattern>com.cloudcheflabs.chango.shaded.google</shadedPattern>
							<excludes>
								<exclude>com.google.common.base.Optional</exclude>
							</excludes>
						</relocation>
					</relocations>
					<transformers>
						<transformer
								implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
						<transformer
								implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
							<resource>META-INF/spring.handlers</resource>
						</transformer>
						<transformer
								implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
							<resource>META-INF/spring.schemas</resource>
						</transformer>
					</transformers>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>org/datanucleus/**</exclude>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/test/resources</directory>
				<targetPath>${project.basedir}/target/test-classes</targetPath>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>application*.*</include>
				</includes>
			</resource>
		</resources>
	</build>
</project>
